From 284121e773da9f7c7944b6c64983a328cf8a238d Mon Sep 17 00:00:00 2001
From: Vaibhav Bedia <vaibhav.bedia@ti.com>
Date: Thu, 15 Mar 2012 01:49:25 +0530
Subject: [PATCH 0918/1092] ARM: OMAP: AM33XX: NET: cpsw: Set SYSC for NO_IDLE
 and NO_STDBY

In a successful suspend-resume cycle the register context is
lost and hence SYSC will go back to its default value of
NO_IDLE and NO_STDBY. However, in a suspend failure/abort due
to some or the other reason, the register is set to
FORCE_IDLE and FORCE_STDBY but never cleared.

If the driver had been fully converted to HWMOD this would have
been taken care of in the generic code. For now, after enabling the
CPSW clock explicitly set the SYSC of CPSW to NO_IDLE and NO_STDBY.

Signed-off-by: Vaibhav Bedia <vaibhav.bedia@ti.com>
---
 drivers/net/ethernet/ti/davinci_mdio.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/ti/davinci_mdio.c b/drivers/net/ethernet/ti/davinci_mdio.c
index 49fb523..24e3481 100644
--- a/drivers/net/ethernet/ti/davinci_mdio.c
+++ b/drivers/net/ethernet/ti/davinci_mdio.c
@@ -49,6 +49,8 @@
 #define DEF_OUT_FREQ		2200000		/* 2.2 MHz */
 
 #define CPGMAC_CLK_CTRL_REG	0x44E00014
+#define CPGMAC_CLK_SYSC         0x4A101208
+#define CPSW_NO_IDLE_NO_STDBY   0xA
 
 struct davinci_mdio_regs {
 	u32	version;
@@ -413,20 +415,25 @@ static inline int wait_for_clock_enable(struct davinci_mdio_data *data)
 {
 	unsigned long timeout = jiffies + msecs_to_jiffies(MDIO_TIMEOUT);
 	u32 __iomem *cpgmac_clk = ioremap(CPGMAC_CLK_CTRL_REG, 4);
+	u32 __iomem *cpgmac_sysc = ioremap(CPGMAC_CLK_SYSC, 4);
 	u32 reg = 0;
 
 	while (time_after(timeout, jiffies)) {
 		reg = readl(cpgmac_clk);
-		if ((reg & 0x70000) == 0)
+		if ((reg & 0x30000) == 0) {
+                        writel(CPSW_NO_IDLE_NO_STDBY, cpgmac_sysc);
 			goto iounmap_ret;
+                }
 	}
 	dev_err(data->dev,
 		"timed out waiting for CPGMAC clock enable, value = 0x%x\n",
 		reg);
+	iounmap(cpgmac_sysc);
 	iounmap(cpgmac_clk);
 	return -ETIMEDOUT;
 
 iounmap_ret:
+	iounmap(cpgmac_sysc);
 	iounmap(cpgmac_clk);
 	return 0;
 }
-- 
1.7.11.2

