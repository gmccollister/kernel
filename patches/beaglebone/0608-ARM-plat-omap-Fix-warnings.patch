From 083aefc62c200b2c0745894b4047a2757a334d81 Mon Sep 17 00:00:00 2001
From: Afzal Mohammed <afzal@ti.com>
Date: Fri, 28 Oct 2011 12:40:07 +0530
Subject: [PATCH 0608/1092] ARM: plat-omap: Fix warnings

Fix,

arch/arm/plat-omap/sram.c: In function 'omap3_sram_restore_context':
arch/arm/plat-omap/sram.c:330:3: warning: initialization makes pointer from integer without a cast
arch/arm/mach-omap2/pm34xx.c: In function 'omap_push_sram_idle':
arch/arm/mach-omap2/pm34xx.c:848:22: warning: initialization makes pointer from integer without a cast
arch/arm/mach-omap2/pm34xx.c:851:28: warning: initialization makes pointer from integer without a cast

Signed-off-by: Afzal Mohammed <afzal@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 arch/arm/plat-omap/include/plat/sram.h | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/arch/arm/plat-omap/include/plat/sram.h b/arch/arm/plat-omap/include/plat/sram.h
index 1be45a6..bfe33ee 100644
--- a/arch/arm/plat-omap/include/plat/sram.h
+++ b/arch/arm/plat-omap/include/plat/sram.h
@@ -22,14 +22,14 @@ extern struct gen_pool *omap_gen_pool;
  * Note that fncpy requires the SRAM address to be aligned to an 8-byte
  * boundary, so the min_alloc_order for the pool is set appropriately.
  */
-#define omap_sram_push(funcp, size) ({				\
-	typeof(&(funcp)) _res;					\
-	size_t _sz = size;					\
-	void *_sram = gen_pool_alloc(omap_gen_pool, _sz);	\
-	_res = (_sram ? fncpy(_sram, &(funcp), _sz) : NULL);	\
-	if (!_res)						\
-		pr_err("Not enough space in SRAM\n");		\
-	_res;							\
+#define omap_sram_push(funcp, size) ({					\
+	typeof(&(funcp)) _res;						\
+	size_t _sz = size;						\
+	void *_sram = (void *) gen_pool_alloc(omap_gen_pool, _sz);	\
+	_res = (_sram ? fncpy(_sram, &(funcp), _sz) : NULL);		\
+	if (!_res)							\
+		pr_err("Not enough space in SRAM\n");			\
+	_res;								\
 })
 
 extern void omap_sram_reprogram_clock(u32 dpllctl, u32 ckctl);
-- 
1.7.11.2

