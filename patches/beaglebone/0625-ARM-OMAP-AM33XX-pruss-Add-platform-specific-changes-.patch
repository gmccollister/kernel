From 8b1e5c5d38492f66259cfea3b7c356f7e5e51a60 Mon Sep 17 00:00:00 2001
From: Vaibhav Hiremath <hvaibhav@ti.com>
Date: Sun, 27 Nov 2011 02:15:12 +0530
Subject: [PATCH 0625/1092] ARM:OMAP:AM33XX:pruss:Add platform specific
 changes for AM33XX in UIO PRUSS driver.

Added AM33XX dependency for UIO_PRUSS driver to build in Kconfig.
ICSS memory map base and length were added in am33xx.h
Other PRU specific resources like ICSS IRQs for AM33XX,
uio_pruss driver register were added to devices.c

Signed-off-by: Amit Shah <amit.shah@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 arch/arm/mach-omap2/devices.c            | 75 +++++++++++++++++++++++++++++++-
 arch/arm/plat-omap/include/plat/am33xx.h |  3 ++
 drivers/uio/Kconfig                      |  4 +-
 3 files changed, 79 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-omap2/devices.c b/arch/arm/mach-omap2/devices.c
index dceb480..9db1d5d 100644
--- a/arch/arm/mach-omap2/devices.c
+++ b/arch/arm/mach-omap2/devices.c
@@ -22,6 +22,7 @@
 #include <linux/etherdevice.h>
 #include <linux/dma-mapping.h>
 #include <linux/can/platform/d_can.h>
+#include <linux/platform_data/uio_pruss.h>
 
 #include <mach/hardware.h>
 #include <mach/irqs.h>
@@ -1065,6 +1066,76 @@ int __init am33xx_register_edma(void)
 static inline void am33xx_register_edma(void) {}
 #endif
 
+#if defined (CONFIG_SOC_OMAPAM33XX)
+struct uio_pruss_pdata am335x_pruss_uio_pdata = {
+	.pintc_base	= 0x20000,
+};
+
+static struct resource am335x_pruss_resources[] = {
+	{
+		.start	= AM33XX_ICSS_BASE,
+		.end	= AM33XX_ICSS_BASE + AM33XX_ICSS_LEN,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_0,
+		.end	= AM33XX_IRQ_ICSS0_0,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_1,
+		.end	= AM33XX_IRQ_ICSS0_1,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_2,
+		.end	= AM33XX_IRQ_ICSS0_2,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_3,
+		.end	= AM33XX_IRQ_ICSS0_3,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_4,
+		.end	= AM33XX_IRQ_ICSS0_4,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_5,
+		.end	= AM33XX_IRQ_ICSS0_5,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_6,
+		.end	= AM33XX_IRQ_ICSS0_6,
+		.flags	= IORESOURCE_IRQ,
+	},
+	{
+		.start	= AM33XX_IRQ_ICSS0_7,
+		.end	= AM33XX_IRQ_ICSS0_7,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device am335x_pruss_uio_dev = {
+	.name		= "pruss_uio",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(am335x_pruss_resources),
+	.resource	= am335x_pruss_resources,
+	.dev	 =	{
+		.coherent_dma_mask = 0xffffffff,
+	}
+};
+
+int __init am335x_register_pruss_uio(struct uio_pruss_pdata *config)
+{
+	am335x_pruss_uio_dev.dev.platform_data = config;
+	return platform_device_register(&am335x_pruss_uio_dev);
+}
+#endif
+
 /*-------------------------------------------------------------------------*/
 
 static int __init omap2_init_devices(void)
@@ -1088,7 +1159,9 @@ static int __init omap2_init_devices(void)
 	omap_init_vout();
 	am33xx_register_edma();
 	am33xx_init_pcm();
-
+#if defined (CONFIG_SOC_OMAPAM33XX)
+	am335x_register_pruss_uio(&am335x_pruss_uio_pdata);
+#endif
 	return 0;
 }
 arch_initcall(omap2_init_devices);
diff --git a/arch/arm/plat-omap/include/plat/am33xx.h b/arch/arm/plat-omap/include/plat/am33xx.h
index e2733b0..b13ddc2 100644
--- a/arch/arm/plat-omap/include/plat/am33xx.h
+++ b/arch/arm/plat-omap/include/plat/am33xx.h
@@ -70,4 +70,7 @@
 #define AM33XX_ASP0_BASE	0x48038000
 #define AM33XX_ASP1_BASE	0x4803C000
 
+#define AM33XX_ICSS_BASE	0x4A300000
+#define AM33XX_ICSS_LEN		0x3FFFF
+
 #endif /* __ASM_ARCH_AM33XX_H */
diff --git a/drivers/uio/Kconfig b/drivers/uio/Kconfig
index 6f3ea9b..9016ec1 100644
--- a/drivers/uio/Kconfig
+++ b/drivers/uio/Kconfig
@@ -96,9 +96,9 @@ config UIO_NETX
 
 config UIO_PRUSS
 	tristate "Texas Instruments PRUSS driver"
-	depends on ARCH_DAVINCI_DA850
+	depends on ARCH_DAVINCI_DA850 || SOC_OMAPAM33XX
 	help
-	  PRUSS driver for OMAPL138/DA850/AM18XX devices
+	  PRUSS driver for OMAPL138/DA850/AM18XX/AM33XX devices
 	  PRUSS driver requires user space components, examples and user space
 	  driver is available from below SVN repo - you may use anonymous login
 
-- 
1.7.11.2

