From d9efeaa0cb35479a455e88f03b5c9da0c1f4f479 Mon Sep 17 00:00:00 2001
From: Mugunthan V N <mugunthanvnm@ti.com>
Date: Wed, 18 Jul 2012 16:17:33 +0530
Subject: [PATCH 1051/1092] drivers: net: ethernet: cpsw: dual emac remove
 module kernel crash bug fix

In dual emac, while removing the ti_cpsw module leads to kernel crash as the
second network interface created is not unregistered and freed. Adding support
to unregister and free the second network interface.

Do not set the second network interface to platform driver data as there is no
separate device for second network interface, so that in cpsw_remove() the
platform device received corresponds to the first network interface all the
time.

Signed-off-by: Mugunthan V N <mugunthanvnm@ti.com>
---
 drivers/net/ethernet/ti/cpsw.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/ti/cpsw.c b/drivers/net/ethernet/ti/cpsw.c
index b9da8fa..01c722c 100644
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@ -2084,7 +2084,6 @@ static int cpsw_init_slave_emac(struct platform_device *pdev,
 		return -ENOMEM;
 	}
 
-	platform_set_drvdata(pdev, ndev);
 	priv_sl2 = netdev_priv(ndev);
 	spin_lock_init(&priv_sl2->lock);
 	priv_sl2->data = *data;
@@ -2151,8 +2150,17 @@ static int cpsw_init_slave_emac(struct platform_device *pdev,
 	return ret;
 }
 
+static inline void cpsw_deinit_slave_emac(struct cpsw_priv *priv)
+{
+	struct net_device *ndev = priv->slaves[1].ndev;
+
+	unregister_netdev(ndev);
+	free_netdev(ndev);
+}
+
 #else
 #define cpsw_init_slave_emac(pdev, priv)	0
+#define cpsw_deinit_slave_emac(priv)
 #endif
 
 static int __devinit cpsw_probe(struct platform_device *pdev)
@@ -2443,6 +2451,7 @@ static int __devexit cpsw_remove(struct platform_device *pdev)
 	msg(notice, probe, "removing device\n");
 	platform_set_drvdata(pdev, NULL);
 
+	cpsw_deinit_slave_emac(priv);
 	omap_dm_timer_free(dmtimer_rx);
 	omap_dm_timer_free(dmtimer_tx);
 	for (i = 0; i < priv->num_irqs; i++)
-- 
1.7.11.2

