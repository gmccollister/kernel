From dcaea9415a5c7708d3ccb08c8dabf284bbbb766c Mon Sep 17 00:00:00 2001
From: Amit Shah <amit.shah@ti.com>
Date: Wed, 16 Nov 2011 17:41:08 +0530
Subject: [PATCH 0623/1092] ARM:OMAP:AM33XX:pruss: Disable SRAM support in
 UIO_PRUSS

	Disable SRAM export in UIO till consolidated SRAM support available for AM33XX

Signed-off-by: Amit Shah <amit.shah@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 drivers/uio/uio_pruss.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/drivers/uio/uio_pruss.c b/drivers/uio/uio_pruss.c
index d53957a..42553d2 100644
--- a/drivers/uio/uio_pruss.c
+++ b/drivers/uio/uio_pruss.c
@@ -25,7 +25,14 @@
 #include <linux/clk.h>
 #include <linux/dma-mapping.h>
 #include <linux/slab.h>
+
+#ifdef ARCH_DAVINCI_DA850
+#define ENABLE_SRAM_SUPPORT
+#endif
+
+#ifdef ENABLE_SRAM_SUPPORT
 #include <mach/sram.h>
+#endif
 
 #define DRV_NAME "pruss_uio"
 #define DRV_VERSION "1.0"
@@ -105,9 +112,11 @@ static void pruss_cleanup(struct platform_device *dev,
 		dma_free_coherent(&dev->dev, extram_pool_sz, gdev->ddr_vaddr,
 			gdev->ddr_paddr);
 	}
+#ifdef ENABLE_SRAM_SUPPORT
 	if (gdev->sram_vaddr)
 		gen_pool_free(davinci_gen_pool,
 			      (unsigned long)gdev->sram_vaddr, sram_pool_sz);
+#endif
 	kfree(gdev->info);
 	clk_put(gdev->pruss_clk);
 	kfree(gdev);
@@ -153,6 +162,7 @@ static int __devinit pruss_probe(struct platform_device *dev)
 		goto out_free;
 	}
 
+#ifdef ENABLE_SRAM_SUPPORT
 	gdev->sram_vaddr = (void *)gen_pool_alloc(davinci_gen_pool,
 						  sram_pool_sz);
 	if (!gdev->sram_vaddr) {
@@ -162,7 +172,7 @@ static int __devinit pruss_probe(struct platform_device *dev)
 
 	gdev->sram_paddr = gen_pool_virt_to_phys(davinci_gen_pool,
 					(unsigned long)gdev->sram_vaddr);
-
+#endif
 	gdev->ddr_vaddr = dma_alloc_coherent(&dev->dev, extram_pool_sz,
 				&(gdev->ddr_paddr), GFP_KERNEL | GFP_DMA);
 	if (!gdev->ddr_vaddr) {
@@ -184,8 +194,6 @@ static int __devinit pruss_probe(struct platform_device *dev)
 		p->mem[0].addr = regs_prussio->start;
 		p->mem[0].size = resource_size(regs_prussio);
 		p->mem[0].memtype = UIO_MEM_PHYS;
-
-		p->mem[1].addr = gdev->sram_paddr;
 		p->mem[1].size = sram_pool_sz;
 		p->mem[1].memtype = UIO_MEM_PHYS;
 
-- 
1.7.11.2

