From 9e6a3948ce338a6f6c1fe8787fbfdc89f22f9790 Mon Sep 17 00:00:00 2001
From: Vaibhav Hiremath <hvaibhav@ti.com>
Date: Sat, 26 Nov 2011 17:00:33 +0530
Subject: [PATCH 0417/1092] gpio:omap: Handle am33xx gpio

gpio for am33xx is similar to that of omap4, add cpu_is_am33xx()
so that driver handles am33xx gpio similar to that of omap4.

Also, cpu_is_omap34xx() is true for am335x. However, not all gpio
code is common between omap34xx & am335x. So take care accordingly when
similar code overlaps.

Signed-off-by: Afzal Mohammed <afzal@ti.com>
Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 drivers/gpio/gpio-omap.c | 44 ++++++++++++++++++++++++--------------------
 1 file changed, 24 insertions(+), 20 deletions(-)

diff --git a/drivers/gpio/gpio-omap.c b/drivers/gpio/gpio-omap.c
index a6c10e8..86ed001 100644
--- a/drivers/gpio/gpio-omap.c
+++ b/drivers/gpio/gpio-omap.c
@@ -213,7 +213,7 @@ static inline void set_24xx_gpio_triggering(struct gpio_bank *bank, int gpio,
 	void __iomem *base = bank->base;
 	u32 gpio_bit = 1 << gpio;
 
-	if (cpu_is_omap44xx()) {
+	if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 		_gpio_rmw(base, OMAP4_GPIO_LEVELDETECT0, gpio_bit,
 			  trigger & IRQ_TYPE_LEVEL_LOW);
 		_gpio_rmw(base, OMAP4_GPIO_LEVELDETECT1, gpio_bit,
@@ -233,7 +233,7 @@ static inline void set_24xx_gpio_triggering(struct gpio_bank *bank, int gpio,
 			  trigger & IRQ_TYPE_EDGE_FALLING);
 	}
 	if (likely(!(bank->non_wakeup_gpios & gpio_bit))) {
-		if (cpu_is_omap44xx()) {
+		if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 			_gpio_rmw(base, OMAP4_GPIO_IRQWAKEN0, gpio_bit,
 				  trigger != 0);
 		} else {
@@ -264,7 +264,7 @@ static inline void set_24xx_gpio_triggering(struct gpio_bank *bank, int gpio,
 			bank->enabled_non_wakeup_gpios &= ~gpio_bit;
 	}
 
-	if (cpu_is_omap44xx()) {
+	if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 		bank->level_mask =
 			__raw_readl(bank->base + OMAP4_GPIO_LEVELDETECT0) |
 			__raw_readl(bank->base + OMAP4_GPIO_LEVELDETECT1);
@@ -591,10 +591,10 @@ static int omap_gpio_request(struct gpio_chip *chip, unsigned offset)
 			void __iomem *reg = bank->base;
 			u32 ctrl;
 
-			if (cpu_is_omap24xx() || cpu_is_omap34xx())
-				reg += OMAP24XX_GPIO_CTRL;
-			else if (cpu_is_omap44xx())
+			if (cpu_is_omap44xx() || cpu_is_am33xx())
 				reg += OMAP4_GPIO_CTRL;
+			else if (cpu_is_omap24xx() || cpu_is_omap34xx())
+				reg += OMAP24XX_GPIO_CTRL;
 			ctrl = __raw_readl(reg);
 			/* Module is enabled, clocks are not gated */
 			ctrl &= 0xFFFFFFFE;
@@ -640,10 +640,10 @@ static void omap_gpio_free(struct gpio_chip *chip, unsigned offset)
 			void __iomem *reg = bank->base;
 			u32 ctrl;
 
-			if (cpu_is_omap24xx() || cpu_is_omap34xx())
-				reg += OMAP24XX_GPIO_CTRL;
-			else if (cpu_is_omap44xx())
+			if (cpu_is_omap44xx() || cpu_is_am33xx())
 				reg += OMAP4_GPIO_CTRL;
+			else if (cpu_is_omap24xx() || cpu_is_omap34xx())
+				reg += OMAP24XX_GPIO_CTRL;
 			ctrl = __raw_readl(reg);
 			/* Module is disabled, clocks are gated */
 			ctrl |= 1;
@@ -1026,7 +1026,7 @@ static inline int init_gpio_info(struct platform_device *pdev)
 static void omap_gpio_mod_init(struct gpio_bank *bank, int id)
 {
 	if (cpu_class_is_omap2()) {
-		if (cpu_is_omap44xx()) {
+		if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 			__raw_writel(0xffffffff, bank->base +
 					OMAP4_GPIO_IRQSTATUSCLR0);
 			__raw_writel(0x00000000, bank->base +
@@ -1345,7 +1345,7 @@ void omap2_gpio_prepare_for_idle(int off_mode)
 	int i, c = 0;
 	int min = 0;
 
-	if (cpu_is_omap34xx())
+	if ((cpu_is_omap34xx() && !cpu_is_am33xx()))
 		min = 1;
 
 	for (i = min; i < gpio_bank_count; i++) {
@@ -1365,7 +1365,8 @@ void omap2_gpio_prepare_for_idle(int off_mode)
 		if (!(bank->enabled_non_wakeup_gpios))
 			continue;
 
-		if (cpu_is_omap24xx() || cpu_is_omap34xx()) {
+		if (cpu_is_omap24xx() || (cpu_is_omap34xx() &&
+							!cpu_is_am33xx())) {
 			bank->saved_datain = __raw_readl(bank->base +
 					OMAP24XX_GPIO_DATAIN);
 			l1 = __raw_readl(bank->base +
@@ -1374,7 +1375,7 @@ void omap2_gpio_prepare_for_idle(int off_mode)
 					OMAP24XX_GPIO_RISINGDETECT);
 		}
 
-		if (cpu_is_omap44xx()) {
+		if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 			bank->saved_datain = __raw_readl(bank->base +
 						OMAP4_GPIO_DATAIN);
 			l1 = __raw_readl(bank->base +
@@ -1388,14 +1389,15 @@ void omap2_gpio_prepare_for_idle(int off_mode)
 		l1 &= ~bank->enabled_non_wakeup_gpios;
 		l2 &= ~bank->enabled_non_wakeup_gpios;
 
-		if (cpu_is_omap24xx() || cpu_is_omap34xx()) {
+		if (cpu_is_omap24xx() || (cpu_is_omap34xx() &&
+							!cpu_is_am33xx())) {
 			__raw_writel(l1, bank->base +
 					OMAP24XX_GPIO_FALLINGDETECT);
 			__raw_writel(l2, bank->base +
 					OMAP24XX_GPIO_RISINGDETECT);
 		}
 
-		if (cpu_is_omap44xx()) {
+		if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 			__raw_writel(l1, bank->base + OMAP4_GPIO_FALLINGDETECT);
 			__raw_writel(l2, bank->base + OMAP4_GPIO_RISINGDETECT);
 		}
@@ -1414,7 +1416,7 @@ void omap2_gpio_resume_after_idle(void)
 	int i;
 	int min = 0;
 
-	if (cpu_is_omap34xx())
+	if ((cpu_is_omap34xx() && !cpu_is_am33xx()))
 		min = 1;
 	for (i = min; i < gpio_bank_count; i++) {
 		struct gpio_bank *bank = &gpio_bank[i];
@@ -1430,7 +1432,8 @@ void omap2_gpio_resume_after_idle(void)
 		if (!(bank->enabled_non_wakeup_gpios))
 			continue;
 
-		if (cpu_is_omap24xx() || cpu_is_omap34xx()) {
+		if (cpu_is_omap24xx() || (cpu_is_omap34xx() &&
+							!cpu_is_am33xx())) {
 			__raw_writel(bank->saved_fallingdetect,
 				 bank->base + OMAP24XX_GPIO_FALLINGDETECT);
 			__raw_writel(bank->saved_risingdetect,
@@ -1438,7 +1441,7 @@ void omap2_gpio_resume_after_idle(void)
 			l = __raw_readl(bank->base + OMAP24XX_GPIO_DATAIN);
 		}
 
-		if (cpu_is_omap44xx()) {
+		if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 			__raw_writel(bank->saved_fallingdetect,
 				 bank->base + OMAP4_GPIO_FALLINGDETECT);
 			__raw_writel(bank->saved_risingdetect,
@@ -1472,7 +1475,8 @@ void omap2_gpio_resume_after_idle(void)
 		if (gen) {
 			u32 old0, old1;
 
-			if (cpu_is_omap24xx() || cpu_is_omap34xx()) {
+			if (cpu_is_omap24xx() || (cpu_is_omap34xx() &&
+							!cpu_is_am33xx())) {
 				old0 = __raw_readl(bank->base +
 					OMAP24XX_GPIO_LEVELDETECT0);
 				old1 = __raw_readl(bank->base +
@@ -1487,7 +1491,7 @@ void omap2_gpio_resume_after_idle(void)
 					OMAP24XX_GPIO_LEVELDETECT1);
 			}
 
-			if (cpu_is_omap44xx()) {
+			if (cpu_is_omap44xx() || cpu_is_am33xx()) {
 				old0 = __raw_readl(bank->base +
 						OMAP4_GPIO_LEVELDETECT0);
 				old1 = __raw_readl(bank->base +
-- 
1.7.11.2

