From 9a36844302f1d3e20fbf868d75533d11e7ea73e9 Mon Sep 17 00:00:00 2001
From: Vaibhav Bedia <vaibhav.bedia@ti.com>
Date: Mon, 17 Oct 2011 14:42:11 +0530
Subject: [PATCH 0563/1092] ASoC: davinci-mcasp: Flush the FIFO before
 enabling

FIFO should be flushed before it is enabled for the first time
This fixes the I/O errors reported by the ASoC core on a fresh boot

Signed-off-by: Vaibhav Bedia <vaibhav.bedia@ti.com>
Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
---
 sound/soc/davinci/davinci-mcasp.c | 54 ++++++++++++++++++++-------------------
 1 file changed, 28 insertions(+), 26 deletions(-)

diff --git a/sound/soc/davinci/davinci-mcasp.c b/sound/soc/davinci/davinci-mcasp.c
index ea1754e..9dfcb1e 100644
--- a/sound/soc/davinci/davinci-mcasp.c
+++ b/sound/soc/davinci/davinci-mcasp.c
@@ -384,27 +384,33 @@ static void mcasp_start_tx(struct davinci_audio_dev *dev)
 static void davinci_mcasp_start(struct davinci_audio_dev *dev, int stream)
 {
 	if (stream == SNDRV_PCM_STREAM_PLAYBACK) {
-		if (dev->txnumevt) {	/* enable FIFO */
-			if (dev->version == MCASP_VERSION_3)
-				mcasp_set_bits(dev->base +
-						MCASP_VER3_WFIFOCTL,
-						FIFO_ENABLE);
-			else
-				mcasp_set_bits(dev->base +
-						DAVINCI_MCASP_WFIFOCTL,
-						FIFO_ENABLE);
+		if (dev->txnumevt) {	/* flush and enable FIFO */
+			if (dev->version == MCASP_VERSION_3) {
+				mcasp_clr_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+			} else {
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_WFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + DAVINCI_MCASP_WFIFOCTL,
+								FIFO_ENABLE);
+			}
 		}
 		mcasp_start_tx(dev);
 	} else {
-		if (dev->rxnumevt) {	/* enable FIFO */
-			if (dev->version == MCASP_VERSION_3)
-				mcasp_set_bits(dev->base +
-						MCASP_VER3_WFIFOCTL,
-						FIFO_ENABLE);
-			else
-				mcasp_set_bits(dev->base +
-						DAVINCI_MCASP_RFIFOCTL,
-						FIFO_ENABLE);
+		if (dev->rxnumevt) {	/* flush and enable FIFO */
+			if (dev->version == MCASP_VERSION_3) {
+				mcasp_clr_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + MCASP_VER3_WFIFOCTL,
+								FIFO_ENABLE);
+			} else {
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_RFIFOCTL,
+								FIFO_ENABLE);
+				mcasp_set_bits(dev->base + DAVINCI_MCASP_RFIFOCTL,
+								FIFO_ENABLE);
+			}
 		}
 		mcasp_start_rx(dev);
 	}
@@ -427,24 +433,20 @@ static void davinci_mcasp_stop(struct davinci_audio_dev *dev, int stream)
 	if (stream == SNDRV_PCM_STREAM_PLAYBACK) {
 		if (dev->txnumevt) {	/* disable FIFO */
 			if (dev->version == MCASP_VERSION_3)
-				mcasp_clr_bits(dev->base +
-						MCASP_VER3_WFIFOCTL,
+				mcasp_clr_bits(dev->base + MCASP_VER3_WFIFOCTL,
 						FIFO_ENABLE);
 			else
-				mcasp_clr_bits(dev->base +
-						DAVINCI_MCASP_WFIFOCTL,
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_WFIFOCTL,
 						FIFO_ENABLE);
 		}
 		mcasp_stop_tx(dev);
 	} else {
 		if (dev->rxnumevt) {	/* disable FIFO */
 			if (dev->version == MCASP_VERSION_3)
-				mcasp_clr_bits(dev->base +
-						MCASP_VER3_RFIFOCTL,
+				mcasp_clr_bits(dev->base + MCASP_VER3_RFIFOCTL,
 						FIFO_ENABLE);
 			else
-				mcasp_clr_bits(dev->base +
-						DAVINCI_MCASP_RFIFOCTL,
+				mcasp_clr_bits(dev->base + DAVINCI_MCASP_RFIFOCTL,
 						FIFO_ENABLE);
 		}
 		mcasp_stop_rx(dev);
-- 
1.7.11.2

